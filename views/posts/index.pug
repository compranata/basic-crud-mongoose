extends ../_layout

block content
    div.main
      -var ttl = title || "Index";
      h1= ttl
      hr
      -for (var i = 0; i < posts.length; i++) {
        div.view(id=posts[i]._id)
          if (user)
            form(method="post" action="/posts/" + posts[i]._id + "/del")
              input.del(type="submit", value="X")
              input(type="hidden", name="_id", value=posts[i]._id)
            // a.button(href="/posts/" + posts[i]._id + "/edit") Edit
            button.button(onclick="toggleEditor('" + posts[i]._id + "')") Edit
          h3: a(href="/posts/" + posts[i]._id)= posts[i].subject
          if posts[i].body === ""
            p [no details...]
          if posts[i].body !== ""
            p= posts[i].body
          -console.log(posts[i].body);
        if (user)
          div.edit(id= "edit-" + posts[i]._id)
            form(method="post" action="/posts/" + posts[i]._id + "/upd")
              button.button(onclick="toggleEditor(" + posts[i]._id + ")") Cancel
              input.button(type="submit", value="Update" style="background-color: #00B7FF; color: #eee")
              h3: a(href="/posts/" + posts[i]._id)= posts[i].subject
              input(type="text" name="subject" value=posts[i].subject)
              textarea(name="body")= posts[i].body
              //- input(type="hidden", name="_method", value="put")
              input(type="hidden", name="id", value=posts[i]._id)
      -}

      // pagination
      hr
      div.pagenation.clearfix
        if paginate.hasPreviousPages || paginate.hasNextPages(pageCount)
          ul.pagination
            if paginate.hasPreviousPages
              li
                a(href=urlstr0)
                  span &Lt;
              li
                a(href=paginate.href(true))
                  span &lt;
            if pages
              each page in pages
                li(class=(currentPage === page.number) ? 'active' : '')
                  a(href=page.url)= page.number
            if paginate.hasNextPages(pageCount)
              li
                a(href=paginate.href())
                  span &gt;
              li
                a(href=urlstr1)
                  span &Gt;
      -const key = (keys.length > 0) ? " with '" + keys.split(/\s/).join("' or '") + "'" : "";
      div.small
        if totalHit!==0 && (totalHit)
          p (Results: #{totalHit} hits#{key}. Total #{pageCount} pages)
        if totalHit===0
          p Ops! your search#{key} was not matched.
      if ttl !== 'Index'
        a.button(href='/posts') Back
    
    // sidebar
    div.sidebar
      div.clearfix
        h2 Search
        form(method="get", action="/posts/search")
          input(type="text", name="q", placeholder="(search text)" value=keys)
          input.button(type="submit", value="Find")
      if (user)
        div.clearfix
          h2 Create new
          form(method="post" action="/posts/create" onsubmit="disableSubmit(this)")
            label(for="subject") Subject*:
            br
            input#newSub(type="text" name="subject" placeholder="Your Subject", required)
            br
            label(for="body") Body:
            br
            textarea(name="body" placeholder="Input your comments...")
            br
            input#newPost.button(type="submit" value="Save", disabled)
      if (!user)
        div.clearfix
          h2 Let's join us!
          p You are currently not logged in. You can only refer the list as a public reader.
          a.button(href='/register') Signup
          p when you signup this site, enabled you to update, create the posts.
          a.button(href='/login') Login
          p You are too lazy? Please ensure to login first.
    script.
      function toggleEditor(id) {
        var elementView = document.getElementById(id);
        var elementEdit = document.getElementById('edit-' + id);
        if (elementView.style.display === "none") {
          elementView.style.display = "block";
          elementEdit.style.display = "none";
        } else {
          elementView.style.display = "none";
          elementEdit.style.display = "block";
        }
      }
      function disableSubmit(form) {
        var elements = form.elements;
        for (var i = 0; i < elements.length; i++) {
          if (elements[i].type == 'submit') {
            elements[i].disabled = true;
            }
          }
      }
      window.addEventListener('DOMContentLoaded', function() {
        var sendButton = document.getElementById('newPost');
        sendButton.style.color = '#ccc';
        document.getElementById('newSub').addEventListener('keyup', function() {
          if (this.value.length < 2) {
            sendButton.disabled = true;
          } else {
            sendButton.style.color = '#00B7FF';
            sendButton.disabled = false;
          }
        })
      })
